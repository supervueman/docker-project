version: '3.5'

services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changem}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - '5432:5432'
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-supervueman@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    networks:
      - postgres
    restart: unless-stopped

  nginx:
    image: nginx:latest
    restart: unless-stopped
    networks:
      - nginx_net
    volumes:
      - ./data/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    networks:
      - nginx_net
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  app_server:
    # container_name: app
    # build: ./app/server
    image: node:12
    # env_file: ./app/server/.env
    networks:
      - postgres
      - nginx_net
    volumes:
      - ./app/server:/usr/src/app
      - ./app/server:/usr/src/app/node_modules
    working_dir: /usr/src/app
    command: npm run dev
    ports:
      - 3333:3000
    # depends_on:
    #   - nginx

networks:
  postgres:
    driver: bridge
  nginx_net:
    name: nginx_net
    external: true

volumes:
  postgres:
  pgadmin:
